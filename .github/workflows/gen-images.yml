name: Build noid images

on:
  workflow_dispatch:

jobs:
  build-iso:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/void-linux/void-mklive:20250116R1
      options: --privileged

    steps:
      - name: Install required packages
        run: |
          xbps-install -Syu xbps
          xbps-install -yu
          xbps-install -y git bash make cdrtools qemu-user-static liblz4 squashfs-tools xorriso xmlto python3 python3-Markdown

      - name: Clone void-mklive repository
        run: |
          git clone https://github.com/ndpm13/void-mklive.git
          cd void-mklive

      - name: Set up permissions
        run: |
          cd void-mklive
          chmod +x ./mkiso.sh
          chmod +x ./mklive.sh
          chmod +x ./mkrootfs.sh
          chmod +x ./installer.sh

      - name: Create output directory
        run: |
          mkdir -p /github/workspace/images

      - name: Build Noid Linux ISO
        run: |
          cd void-mklive
          yes | ./mkiso.sh -a x86_64 -b xfce -r "https://github.com/noid-linux/xbps-repo/releases/latest/download" -- -p "neovim alacritty starship brave gruvbox-material-theme gruvbox-bibata-cursor-theme" -I noid -C "live.autologin" -T "Noid Linux" -v "linux-lts" -o /github/workspace/images/noid.iso

      - name: Create release tag
        id: create_tag
        run: |
          # Get current date in YYYYMMDD format
          DATE=$(date +"%Y%m%d")
          echo "release_tag=noid-linux-${DATE}" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.create_tag.outputs.release_tag }}
          name: Noid Linux Release ${{ steps.create_tag.outputs.release_tag }}
          body: |
            Noid Linux ISO Build
            - Based on Void Linux (XFCE)
            - Pre-installed packages: neovim, alacritty, starship, brave
            - Linux kernel: linux-lts
          files: /github/workspace/images/noid.iso
          draft: true
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
